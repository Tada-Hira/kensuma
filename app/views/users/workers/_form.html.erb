<%= render 'shared/error_massages', object: f.object %>

<%# 氏名 %>
<%= f.label :name %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.text_field :name, class: "form-control", placeholder: example_name %><br>

<%# フリガナ %>
<%= f.label :name_kana %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.text_field :name_kana, class: "form-control", placeholder: example_name_kana %><br>

<%# 事業主または一人親方 %>
<%= f.label :business_owner_or_master %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
<div class="md-3"><%= f.check_box :business_owner_or_master, id: :business_owner_or_master,:as => :boolean %> はい</div><br>

<%# 国籍 %>
<%= f.label :country %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.country_select :country, { priority_countries: ["JP"] }, { class: "form-control", id: "country-select" } %>
<br>

<!-- 外国人建設就労者情報 -->
<div class="list-group" id="status-of-residence-field" style="display: none;">
  <h5>外国人就労者の方</h5>
  <div class="list-group-item">
    <div class="mt-3 mb-3">
      <%= f.label :status_of_residence, class: "required" %>
      <span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
      <%= f.collection_radio_buttons(:status_of_residence, Worker.status_of_residences_i18n, :first, :last, class: "radio") do |b| %>
        <div class="radio">
          <%= b.label { b.radio_button + b.text } %>
        </div>
      <% end %>
    </div>
  </div>
</div><br>

<%# 性別 %>
<%= f.label :sex %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
<%= f.collection_radio_buttons(:sex, Worker.sexes_i18n, :first, :last, class: "radio") do |b| %>
  <div class="radio">
    <%= b.label { b.radio_button + b.text } %>
  </div>
<% end %>
<br>

<%# 郵便番号 %>
<%= f.label :post_code %>
<%= f.text_field :post_code, value: @post_code, class: "form-control", placeholder: annotation_hyphen %><br>

<%# 住所 %>
<%= f.label :my_address %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.text_field :my_address, class: "form-control", placeholder: Worker.human_attribute_name(:my_address) %><br>

<%# 電話番号 %>
<%= f.label :my_phone_number %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.telephone_field :my_phone_number, value: @my_phone_number, class: "form-control", placeholder: annotation_hyphen %><br>

<%# メールアドレス %>
<%= f.label :email %>
<%= f.text_field :email, class: "form-control", placeholder: example_email %><br>

<%# 緊急連絡先：氏名 %>
<%= f.label :family_name %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.text_field :family_name, class: "form-control", placeholder: Worker.human_attribute_name(:family_name) %><br>

<%# 緊急連絡先：続柄 %>
<%= f.label :relationship %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.text_field :relationship, class: "form-control", placeholder: Worker.human_attribute_name(:relationship) %><br>

<%# 緊急連絡先：住所 %>
<%= f.label :family_address %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.text_field :family_address, class: "form-control", placeholder: Worker.human_attribute_name(:family_address) %><br>

<%# 緊急連絡先：電話番号 %>
<%= f.label :family_phone_number %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.telephone_field :family_phone_number, value: @family_phone_number, class: "form-control", placeholder: annotation_hyphen %><br>

<%# 生年月日 %>
<%= f.label :birth_day_on %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.date_field :birth_day_on, class: "form-control", placeholder: Worker.human_attribute_name(:birth_day_on) %><br>

<%# 血液型（ABO） %>
<%= f.label :abo_blood_type %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
<%= f.collection_radio_buttons(:abo_blood_type, Worker.abo_blood_types_i18n, :first, :last, class: "radio") do |b| %>
  <div class="radio">
    <%= b.label { b.radio_button + b.text } %>
  </div>
<% end %><br>

<%# 血液型（RH） %>
<%= f.label :rh_blood_type %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
<%= f.collection_radio_buttons(:rh_blood_type, Worker.rh_blood_types_i18n, :first, :last, class: "radio") do |b| %>
  <div class="radio">
    <%= b.label { b.radio_button + b.text } %>
  </div>
<% end %><br>

<%# 役職 %>
<%= f.label :job_title %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
<%= f.text_field :job_title, class: "form-control", placeholder: Worker.human_attribute_name(:job_title) %><br>

<%# 雇入年月日 %>
<%= f.label :hiring_on %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.date_field :hiring_on, class: "form-control", placeholder: Worker.human_attribute_name(:hiring_on) %><br>

<%# 雇入前経験年数 %>
<%= f.label :experience_term_before_hiring %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.text_field :experience_term_before_hiring, class: "form-control" %><br>

<%# ブランク年数 %>
<%= f.label :blank_term %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span>
<%= f.text_field :blank_term, class: "form-control" %><br>

<%# 契約条件の確認 %>
<%= f.label :employment_contract %>
<span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
<%= f.collection_radio_buttons(:employment_contract, Worker.employment_contracts_i18n, :first, :last, class: "radio") do |b| %>
  <div class="radio">
    <%= b.label { b.radio_button + b.text } %>
  </div>
<% end %><br>

<%# 技能者ID(キャリアアップシステム) %>
<%= f.label :career_up_id %>
<%= f.text_field :career_up_id, value: @career_up_id, class: "form-control", placeholder: annotation_hyphen %><br>

<%# キャリアアップシステムカードの写し %>
<%= f.label :career_up_images %>
<%= f.file_field :career_up_images, accept: 'image/jpg, image/jpeg, image/png', multiple: true, class: "form-control" %>
<% if @worker.career_up_images.present? %>
  <% @worker.career_up_images.each_with_index do |image, index| %>
    <%= image_tag(image.url) %>
    <%= link_to "削除", users_worker_update_workerskilltraining_images_path(@worker, index: index, worker_skill_training_id: f.id), method: :patch, data: { confirm: "本当に削除してもよろしいですか？" } %>
  <% end %>
<% end %>
<br>

<div class="list-group">
  <!-- WorkerLicenseここから -->
  <div class="list-group-item">
    <%= f.fields_for :worker_licenses do |w_license| %>
      <%= render "worker_license_fields", f: w_license %>
    <% end %>
    <div id="license-insertion-point"></div>
    <%= link_to_add_association "＋フォーム追加", f, :worker_licenses,
      data: {
        association_insertion_node: '#license-insertion-point',
        association_insertion_method: 'append'
      }
    %>
  </div>
  <!-- WorkerLicenseここまで -->

  <!-- WorkerSkillTrainingここから -->
  <div class="list-group-item">
    <%= f.fields_for :worker_skill_trainings do |w_skill_training| %>
      <%= render "worker_skill_training_fields", f: w_skill_training %>
    <% end %>
    <div id="skill-insertion-point"></div>
    <%= link_to_add_association "＋フォーム追加", f, :worker_skill_trainings,
      data: {
        association_insertion_node: '#skill-insertion-point',
        association_insertion_method: 'append'
        }
    %>
  </div>
  <!-- WorkerSkillTrainingここまで -->

  <!-- WorkerSpecialEducationここから -->
  <div class="list-group-item">
    <%= f.fields_for :worker_special_educations do |w_special_education| %>
      <%= render "worker_special_education_fields", f: w_special_education %>
    <% end %>
    <div id="special-insertion-point"></div>
    <%= link_to_add_association "＋フォーム追加", f, :worker_special_educations,
      data: {
        association_insertion_node: '#special-insertion-point',
        association_insertion_method: 'append'
        }
    %>
  </div>
  <!-- WorkerSpecialEducationここまで -->

  <%# worker_safety_health_educationここから %>
  <div class="list-group-item">
    <%= f.fields_for :worker_safety_health_educations do |w_safety_health_education| %>
      <%= render "worker_safety_health_education_fields", f: w_safety_health_education %>
    <% end %>
    <div id="safety-health-education-insertion-point"></div>
    <%= link_to_add_association "＋フォーム追加", f, :worker_safety_health_educations,
      data: {
        association_insertion_node: '#safety-health-education-insertion-point',
        association_insertion_method: 'append'
      }
    %>
  </div>
  <%# worker_safety_health_educationここまで %>

  <%# 運転免許及び認印ここから %>
  <div class="list-group-item">
    <%= f.label :driver_licence %>
    <div class="list-group-item">
      <% I18n.t('driver_licences').each do |key, value| %>
        <%= check_box_tag "driver_licences[#{key}]", value, @driver_licence.include?(value), id: "driver_licences[#{key}]" %>
        <%= label_tag "driver_licences_#{key}", value %><br>
      <% end %><br>
      <%# worker_params_with_convertedでパラメーターを扱えるように定義 %>
      <%= f.hidden_field :driver_licence, value: '' %>
      <div id = "driver_licence_number">
        <%= f.label :driver_licence_number %>
        <span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
        <%= f.text_field :driver_licence_number, value: @driver_licence_number, class: "form-control", placeholder: annotation_hyphen %>
      </div>
      <%= f.label :seal %>
      <%= f.file_field :seal, accept: 'image/jpg, image/jpeg, image/png', class: "form-control" %>
    </div>
  </div><br>

  <!-- WorkerMedicalここから -->
  <div class="list-group-item">
    <%= f.fields_for :worker_medical do |worker_medical| %>
      <%# 健康診断の受診 %>
      <div class="mb-3">
        <%= worker_medical.label :is_med_exam %>
        <span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
        <%= worker_medical.collection_radio_buttons(:is_med_exam, WorkerMedical.is_med_exams_i18n, :first, :last, class: "radio") do |b| %>
          <div class="radio">
            <%= b.label { b.radio_button + b.text } %>
          </div>
        <% end %>
      </div>
      <%# 最近の健康状態 %>
      <div class="mb-3">
        <%= worker_medical.label :health_condition %>
        <span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
        <%= worker_medical.collection_radio_buttons(:health_condition, WorkerMedical.health_conditions_i18n, :first, :last, class: "radio") do |b| %>
          <div class="radio">
            <%= b.label { b.radio_button + b.text } %>
          </div>
        <% end %>
      </div>

      <div class="row mb-3">
        <%= worker_medical.label :med_exam_on %>
        <%= worker_medical.date_field :med_exam_on, class: "form-control" %>
      </div>
      <div class="row mb-3">
        <%= worker_medical.label :max_blood_pressure %>
        <%= worker_medical.number_field :max_blood_pressure, class: "form-control" %>
      </div>
      <div class="row mb-3">
        <%= worker_medical.label :min_blood_pressure %>
        <%= worker_medical.number_field :min_blood_pressure, class: "form-control" %>
      </div>
      <div class="row mb-3">
        <%= worker_medical.label :special_med_exam_on %>
        <%= worker_medical.date_field :special_med_exam_on, class: "form-control" %>
      </div>
      <%= worker_medical.fields_for :worker_exams do |worker_exam| %>
        <%= render "worker_exam_fields", f: worker_exam %>
      <% end %>
      <div id='worker-exam-insertion-point'></div>
      <%= link_to_add_association "＋フォーム追加", worker_medical, :worker_exams,
        data: {
          association_insertion_node: '#worker-exam-insertion-point',
          association_insertion_method: 'append'
        } 
      %>
    <% end %>
  </div>
  <!-- WorkerMedicalここまで -->

  <!-- WorkerInsuranceここから -->
  <div class="list-group-item">
    <%= f.fields_for :worker_insurance do |worker_insurance| %>
      <div class="mt-3 mb-3" id="health_insurance_type">
        <%= worker_insurance.label :health_insurance_type %>
        <span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
        <div class="list-group-item">
          <%= worker_insurance.collection_radio_buttons(:health_insurance_type, WorkerInsurance.health_insurance_types_i18n, :first, :last, class: "radio") do |b| %>
            <div class="radio">
              <%= b.label { b.radio_button + b.text } %>
            </div>
          <% end %>
          <!-- health_insurance_typeがhealth_insurance_associationまたはconstruction_national_health_insuranceで入力可能 -->
          <div id="health_insurance_name">
            <%= worker_insurance.label :health_insurance_name %>
            <%= worker_insurance.text_field :health_insurance_name, class: "form-control" %>
          </div>
        </div>
      </div>

      <%# 健康保険証の写し %>
      <%= worker_insurance.label :health_insurance_image %>
      <div class="col-md-3" style="margin-bottom: 10px;">
        <%= worker_insurance.file_field :health_insurance_image, accept: 'image/jpg, image/jpeg, image/png', multiple: true, class: "form-control" %>
        <% if @worker.worker_insurance.health_insurance_image.present? %>
          <% @worker.worker_insurance.health_insurance_image.each do |image| %>
            <%= image_tag(image.url) %>
          <% end %>
        <% end %>
      </div>
      <br>

      <div class="mb-3" id="pension_insurance_type">
        <%= worker_insurance.label :pension_insurance_type %>
        <span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
        <%= worker_insurance.collection_radio_buttons(:pension_insurance_type, WorkerInsurance.pension_insurance_types_i18n, :first, :last, class: "radio") do |b| %>
          <div class="radio">
            <%= b.label { b.radio_button + b.text } %>
          </div>
        <% end %><br>
      </div>

      <div class="mb-3" id="employment_insurance_type">
        <%= worker_insurance.label :employment_insurance_type %>
        <span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
        <div class="list-group-item">
          <%= worker_insurance.collection_radio_buttons(:employment_insurance_type, WorkerInsurance.employment_insurance_types_i18n, :first, :last, class: "radio") do |b| %>
            <div class="radio">
              <%= b.label { b.radio_button + b.text } %>
            </div>
          <% end %>
          <!-- employment_insurance_numberが被保険者(0)で入力可能 -->
          <div id="employment_insurance_number">
            <%= worker_insurance.label :employment_insurance_number %>
            <%= worker_insurance.text_field :employment_insurance_number, class: "form-control" %>
          </div>
        </div>
      </div>
      
      <div class="mt-3" id="has_labor_insurance">
        <%= worker_insurance.label :has_labor_insurance %><br>
        <%= worker_insurance.collection_radio_buttons(:has_labor_insurance, WorkerInsurance.has_labor_insurances_i18n, :first, :last, class: "radio") do |b| %>
          <div class="radio">
            <%= b.label { b.radio_button + b.text } %>
          </div>
        <% end %><br>
      </div>

      <div class="mb-3">
        <%= worker_insurance.label :severance_pay_mutual_aid_type %>
        <span class="p-1 mb-2 rounded bg-danger text-white">必須</span><br>
        <div class="list-group-item">
          <%= worker_insurance.collection_radio_buttons(:severance_pay_mutual_aid_type, WorkerInsurance.severance_pay_mutual_aid_types_i18n, :first, :last, class: "radio") do |b| %>
            <div class="radio">
              <%= b.label { b.radio_button + b.text } %>
            </div>
          <% end %>
          <!-- severance_pay_mutual_aid_typeがその他(2)のときに入力可能 -->
          <div class="mb-3" id="mutual_aid_number">
            <%= worker_insurance.label :severance_pay_mutual_aid_name %>
            <%= worker_insurance.text_field :severance_pay_mutual_aid_name, class: "form-control" %>
          </div>
        </div>
      </div>
    <% end %>
  </div><br>
  <!-- WorkerInsuranceここまで -->
</div><br>

<script>
  // 国籍が日本以外の選択時に外国人就労者情報のフォームを表示させる
  $(document).ready(function() {
    // 国の選択肢が変更されたときに呼び出される関数を定義する
    function checkCountrySelection() {
      var selectedCountry = $('#country-select').val();
      // 国がJP以外の場合には、居住状況フィールドを表示する
      if (selectedCountry !== 'JP') {
        $('#status-of-residence-field').show();
        // 居住状況フィールドを必須にする
        $('input[name="worker[status_of_residence]"]').prop('required', true);
      } else {
        // 国がJPの場合には、居住状況フィールドを非表示にする
        $('#status-of-residence-field').hide();
        // 居住状況フィールドを必須ではなくする
        $('input[name="worker[status_of_residence]"]').prop('required', false);
        // ラジオボタンの選択を外す
        $('input[name="worker[status_of_residence]"]').prop('checked', false);
      }
    }

    // フォームの初期状態で居住状況フィールドを非表示にする
    $('#status-of-residence-field').hide();

    // 国の選択肢が変更されたときにcheckCountrySelectionを呼び出す
    $('#country-select').change(checkCountrySelection);

    // フォームが送信されたときにラジオボタンの選択を外す
    $('form').submit(function() {
      if ($('#country-select').val() === 'JP') {
        $('input[name="worker[status_of_residence]"]').prop('checked', false);
      }
    });

    // ページの読み込み時にcheckCountrySelectionを呼び出す
    checkCountrySelection();
  });
</script>

<script>
  // 健康保険の名前の表示・非表示
  const health_insurance_type = document.getElementById('health_insurance_type')
  const health_insurance_name = document.getElementById('health_insurance_name')
  function getRadioHealthInsuranceName(object) {
    const value = $('input[name="worker[worker_insurance_attributes][health_insurance_type]"]:checked').val();
    if (value == 'health_insurance_association' || value == 'construction_national_health_insurance'){
      health_insurance_name.classList.remove('hidden');
    } else {
      health_insurance_name.classList.add('hidden');
    }
  };
  getRadioHealthInsuranceName(health_insurance_type); //ページの読み込み時に判定

  $('input[name="worker[worker_insurance_attributes][health_insurance_type]"]').change(function() {
    if ($(this).val() == 'health_insurance_association' || $(this).val() == 'construction_national_health_insurance'){
      health_insurance_name.classList.remove('hidden');
    } else {
      health_insurance_name.classList.add('hidden');
    }
  });
    

  // 被保険者番号の下4桁の表示・非表示
  const employment_insurance_type = document.getElementById('employment_insurance_type');
  const employment_insurance_number = document.getElementById('employment_insurance_number');
  function getSelectedEmploymentInsuranceType(object) {
    const value = $('input[name="worker[worker_insurance_attributes][employment_insurance_type]"]:checked').val();
    if (value === 'insured') {
      employment_insurance_number.classList.remove('hidden');
    } else {
      employment_insurance_number.classList.add('hidden');
    }
  };
  getSelectedEmploymentInsuranceType(employment_insurance_type); //ページの読み込み時に判定

  $('input[name="worker[worker_insurance_attributes][employment_insurance_type]"]').change(function() {
    if ($(this).val() === 'insured') {
      employment_insurance_number.classList.remove('hidden');
    } else {
      employment_insurance_number.classList.add('hidden');
    }
  });

  // mutual_aid_type mutual_aid_number
  const mutual_aid_type = document.getElementById('mutual_aid_type');
  const mutual_aid_number = document.getElementById('mutual_aid_number');
  function getSelectedMutualAidType(object){
    const index = object.selectedIndex;
    const value = object.options[index].value;
    if (value === 'other'){
      mutual_aid_number.classList.remove('hidden');
    } else {
      mutual_aid_number.classList.add('hidden');
    };
  };
  getSelectedMutualAidType(mutual_aid_type); //ページの読み込み時に判定

  // 免許証番号表示・非表示処理
  // 免許証番号項目表示・非表示のクラスを操作するメソッド
  function driverLicenceNumberShowHide(driver_licence_check, driver_licence_number) {
    if (driver_licence_check > 1) {
      driver_licence_number.classList.remove('hidden');
    } else {
      driver_licence_number.classList.add('hidden');
    }
  }
  const driver_licence_number = document.getElementById('driver_licence_number');
  const all_driver_licences = ["LL", "ML", "MLC", "MLL", "SL", "SLL", "LLT", "SLT", "SLSP", "MOP", "TDL"];
  // const all_driver_licences = {
  //   LL: "大型免許",
  //   ML: "中型免許",
  //   MLC: "中型免許(8t)に限る",
  //   MLL: "準中型免許",
  //   SL: "普通免許",
  //   SLL: "大型特殊免許",
  //   LLT: "大型二輪免許",
  //   SLT: "普通 二輪免許",
  //   SLSP: "小型特殊免許",
  //   MOP: "原付免許",
  //   TDL: "牽引自動車第一種運転免許"
  // };

  function increment_driver_licence_check(key, driver_licence_check) {
    if ($(`input[name="driver_licences[${key}]"]`).is(':checked');) {
      debugger
      driver_licence_check++;
    }
  };

  function decrement_driver_licence_check(key, driver_licence_check) {
    if (!$(`input[name="driver_licences[${key}]"]`).is(':checked');) {
      debugger
      driver_licence_check--;
    }
  };

  function getCheckDriverLicence() {
    let driver_licence_check = 0
    all_driver_licences.forEach(function(key) {
      debugger
      increment_driver_licence_check(key, driver_licence_check);
    });
    debugger
    driverLicenceNumberShowHide(driver_licence_check, driver_licence_number);
  };
  getCheckDriverLicence(); //ページの読み込み時に判定

  let change_driver_licence_check = 0
  let driver_licence_key = LL
  $(`input[name="driver_licences[${driver_licence_key}]"]`).change(function() {
    increment_driver_licence_check(driver_licence_key, change_driver_licence_check)
    decrement_driver_licence_check(driver_licence_key, change_driver_licence_check)
    driverLicenceNumberShowHide(change_driver_licence_check, driver_licence_number);
  });
</script>

<script>
  $(function(){
    $.each(function(key){
      $.validator.addMethod(key, this);
    });
    $(".worker-form-validation").validate({
      rules:{
        "worker[name]": {
          required: true
        },
        "worker[name_kana]": {
          required: true
        },
        "worker[country]": {
          required: true
        },
        "worker[sex]": {
          required: true
        },
        "worker[my_address]": {
          required: true
        },
        "worker[my_phone_number]": {
          required: true
        },
        "worker[family_name]": {
          required: true
        },
        "worker[relationship]": {
          required: true
        },
        "worker[family_address]": {
          required: true
        },
        "worker[family_phone_number]": {
          required: true
        },
        "worker[birth_day_on]": {
          required: true
        },
        "worker[abo_blood_type]": {
          required: true
        },
        "worker[job_title]": {
          required: true
        },
        "worker[hiring_on]": {
          required: true
        },
        "worker[experience_term_before_hiring]": {
          required: true
        },
        "worker[blank_term]": {
          required: true
        },
        "worker[employment_contract]": {
          required: true
        },
        "worker[worker_insurance_attributes][health_insurance_type]": {
          required: true
        },
        "worker[worker_insurance_attributes][health_insurance_name]": {
          required: true
        },
        "worker[worker_insurance_attributes][pension_insurance_type]": {
          required: true
        },
        "worker[worker_insurance_attributes][employment_insurance_type]": {
          required: true
        },
        "worker[worker_insurance_attributes][employment_insurance_number]": {
          required: true
        },
        "worker[worker_insurance_attributes][severance_pay_mutual_aid_type]": {
          required: true
        },
        "worker[worker_insurance_attributes][severance_pay_mutual_aid_name]": {
          required: true
        },
        "worker[worker_insurance_attributes][has_labor_insurance]": {
          required: true
        },
      },
      messages:{
        "worker[name]": {
          required: "名前を入力してください。"
        },
        "worker[name_kana]": {
          required: "名前カナを入力してください。"
        },
        "worker[country]": {
          required: "国籍を入力してください。"
        },
        "worker[sex]": {
          required: "性別を入力してください。"
        }
        "worker[my_address]": {
          required: "住所を入力してください。"
        },
        "worker[my_phone_number]": {
          required: "電話番号を入力してください。"
        },
        "worker[family_name]": {
          required: "家族の氏名を入力してください。"
        },
        "worker[relationship]": {
          required: "家族の続柄を入力してください。"
        },
        "worker[family_address]": {
          required: "家族の住所を入力してください。"
        },
        "worker[family_phone_number]": {
          required: "家族の電話番号を入力してください。"
        },
        "worker[birth_day_on]": {
          required: "生年月日を入力してください。"
        },
        "worker[abo_blood_type]": {
          required: "血液型(ABO)を入力してください。"
        },
        "worker[job_title]": {
          required: "役職を入力してください。"
        },
        "worker[hiring_on]": {
          required: "雇入年月日を入力してください。"
        },
        "worker[experience_term_before_hiring]": {
          required: "雇入前経験年数を入力してください。"
        },
        "worker[blank_term]": {
          required: "ブランク年数を入力してください。"
        },
        "worker[employment_contract]": {
          required: "雇用契約書を取り交わしたかどうかを選択してください。"
        },
        "worker[worker_insurance_attributes][health_insurance_type]": {
          required: "健康保険のタイプを選択してください。"
        },
        "worker[worker_insurance_attributes][health_insurance_name]": {
          required: "健康保険の名前を入力してください。"
        },
        "worker[worker_insurance_attributes][pension_insurance_type]": {
          required: "年金保険のタイプを選択してください。"
        },
        "worker[worker_insurance_attributes][employment_insurance_type]": {
          required: "雇用保険のタイプを選択してください。"
        },
        "worker[worker_insurance_attributes][employment_insurance_number]": {
          required: "被保険者番号の下4桁を入力してください。"
        },
        "worker[worker_insurance_attributes][severance_pay_mutual_aid_type]": {
          required: "建設業退職金共済制度を選択してください。"
        },
        "worker[worker_insurance_attributes][severance_pay_mutual_aid_name]": {
          required: "建設業退職金共済制度名前を入力してください。"
        },
        "worker[worker_insurance_attributes][has_labor_insurance]": {
          required: "労働特別保険に加入しているかどうかを選択してください。"
        },
      },
      errorClass: "input_form_error"
    });
     // 入力欄を変更したときにバリデーションを実行
    $(".worker-form-validation").change(function () {
      $(this).valid();
    });
  });
</script>
